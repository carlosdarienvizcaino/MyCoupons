{"version":3,"sources":["app.js"],"names":["Promise","require","seedDB","app","server","createServer","default","startServer","angularFullstack","listen","port","ip","console","log","get","exports","module"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAFA,mBAASA,OAAT,GAAmBC,QAAQ,UAAR,CAAnB;;;AAIA;AACA;;;;;;;;AAQA;AACA,IAAG,sBAAOC,MAAV,EAAkB;AAChBD,UAAQ,eAAR;AACD;;AAED;AACA,IAAIE,MAAM,wBAAV;AACA,IAAIC,SAAS,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;AACAF,QAAQ,kBAAR,EAA4BK,OAA5B,CAAoCH,GAApC;AACAF,QAAQ,UAAR,EAAoBE,GAApB;;AAEA;AACA,SAASI,WAAT,GAAuB;AACrBJ,MAAIK,gBAAJ,GAAuBJ,OAAOK,MAAP,CAAc,sBAAOC,IAArB,EAA2B,sBAAOC,EAAlC,EAAsC,YAAW;AACtEC,YAAQC,GAAR,CAAY,4CAAZ,EAA0D,sBAAOH,IAAjE,EAAuEP,IAAIW,GAAJ,CAAQ,KAAR,CAAvE;AACD,GAFsB,CAAvB;AAGD;;AAED,4BAAaP,WAAb;;AAEA;AACAQ,UAAUC,OAAOD,OAAP,GAAiBZ,GAA3B","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nimport express from 'express';\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\nimport config from './config/environment';\nimport http from 'http';\n\n// Connect to MongoDB\n/*\nmongoose.connect(config.mongo.uri, config.mongo.options);\nmongoose.connection.on('error', function(err) {\n  console.error(`MongoDB connection error: ${err}`);\n  process.exit(-1); // eslint-disable-line no-process-exit\n});\n*/\n\n// Populate databases with sample data\nif(config.seedDB) {\n  require('./config/seed');\n}\n\n// Setup server\nvar app = express();\nvar server = http.createServer(app);\nrequire('./config/express').default(app);\nrequire('./routes')(app);\n\n// Start server\nfunction startServer() {\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n  });\n}\n\nsetImmediate(startServer);\n\n// Expose app\nexports = module.exports = app;\n"]}