{"version":3,"sources":["api/companies/company.service.js"],"names":["gmail","require","module","exports","CompanyService","prototype","getCouponsPerCompany","accessToken","ids","userId","that","resolve","reject","numberOfRequest","numberOfMessage","length","i","id","getFromHeaderFromEmailPayloadHeaders","then","addCompany","email","companyList","getCompanies","catch","error","options","format","metadataHeaders","fields","GET_Message","Error"],"mappings":";;;;;;;;AAAA;;;;AAIA,IAAIA,QAAQC,QAAQ,uBAAR,CAAZ;;AAEAC,OAAOC,OAAP,GAAiBC,cAAjB;;AAEA,SAASA,cAAT,GAA0B,CAAE;;AAG5BA,eAAeC,SAAf,CAAyBC,oBAAzB,GAAgD,UAAUC,WAAV,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC;AAChF,MAAIC,OAAO,IAAX;AACA,SAAO,sBAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;;AAE5C,QAAIC,kBAAkB,CAAtB;AACA,QAAIC,kBAAkBN,IAAIO,MAA1B;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,eAApB,EAAqCE,GAArC,EAA0C;;AAExC,UAAIC,KAAKT,IAAIQ,CAAJ,EAAOC,EAAhB;AACAP,WAAKQ,oCAAL,CAA0CX,WAA1C,EAAuDU,EAAvD,EAA2DR,MAA3D,EACGU,IADH,CACS,iBAAS;;AAEdN;AACAH,aAAKU,UAAL,CAAgBC,KAAhB;;AAEA,YAAIR,mBAAmBC,eAAvB,EAAwC;AACtC,cAAIQ,cAAcZ,KAAKa,YAAL,EAAlB;AACAZ,kBAAQW,WAAR;AACD;AAEF,OAXH,EAYGE,KAZH,CAYS,iBAAS;AACdZ,eAAOa,KAAP;AACD,OAdH;AAeD;AACF,GAvBM,CAAP;AAwBH,CA1BD;;AA4BArB,eAAeC,SAAf,CAAyBa,oCAAzB,GAAgE,UAASX,WAAT,EAAsBU,EAAtB,EAA0BR,MAA1B,EAAkC;AAC9F,MAAIiB,UAAU;AACZT,QAAIA,EADQ;AAEZR,YAAQA,MAFI;AAGZkB,YAAQ,UAHI;AAIZC,qBAAiB,MAJL;AAKZC,YAAQ;AALI,GAAd;AAOA,SAAO7B,MAAM8B,WAAN,CAAkBJ,OAAlB,EAA2BnB,WAA3B,CAAP;AACH,CATD;;AAWAH,eAAeC,SAAf,CAAyBe,UAAzB,GAAsC,YAAW;AAChD,QAAM,IAAIW,KAAJ,CAAU,4CAAV,CAAN;AACA,CAFD;;AAIA3B,eAAeC,SAAf,CAAyBkB,YAAzB,GAAwC,YAAW;AACjD,QAAM,IAAIQ,KAAJ,CAAU,8CAAV,CAAN;AACD,CAFD","file":"company.service.js","sourcesContent":["/**\n * Created by Carlos on 3/2/2017.\n */\n\nvar gmail = require('../gmail/gmail-client');\n\nmodule.exports = CompanyService;\n\nfunction CompanyService() {}\n\n\nCompanyService.prototype.getCouponsPerCompany = function (accessToken, ids, userId) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n\n      var numberOfRequest = 0;\n      var numberOfMessage = ids.length;\n      for (var i = 0; i < numberOfMessage; i++) {\n\n        var id = ids[i].id;\n        that.getFromHeaderFromEmailPayloadHeaders(accessToken, id, userId)\n          .then( email => {\n\n            numberOfRequest++;\n            that.addCompany(email);\n\n            if (numberOfRequest == numberOfMessage) {\n              var companyList = that.getCompanies();\n              resolve(companyList);\n            }\n\n          })\n          .catch(error => {\n            reject(error);\n          });\n      }\n    });\n}\n\nCompanyService.prototype.getFromHeaderFromEmailPayloadHeaders = function(accessToken, id, userId) {\n    var options = {\n      id: id,\n      userId: userId,\n      format: 'metadata',\n      metadataHeaders: 'From',\n      fields: 'id, labelIds, payload(headers)'\n    };\n    return gmail.GET_Message(options, accessToken);\n};\n\nCompanyService.prototype.addCompany = function() {\n throw new Error('Method: addCompany(...) is NOT implemented');\n};\n\nCompanyService.prototype.getCompanies = function() {\n  throw new Error('Method: getCompanies(...) is NOT implemented');\n};\n\n\n"]}