{"version":3,"sources":["api/companies/company-new-coupons.service.js"],"names":["CompanyService","require","gmail","Companies","CompanyNewCoupons","CompanyParser","module","exports","CompanyNewCouponsService","call","companies","prototype","constructor","getIdsForAllUnReadPromotionalEmailsBeforeNDays","accessToken","userId","day","options","labelIds","q","fields","LIST_Messages","addCompany","email","emailOriginValue","payload","headers","value","companyName","parseCompanyName","hasCompany","companyDomain","parseCompanyDomain","company","addNewCoupon","id","getCompany","getCompanies","getAllCompanies"],"mappings":";;;;;;;;AAAA;;;;AAIA,IAAIA,iBAAiBC,QAAQ,mBAAR,CAArB;AACA,IAAIC,QAAQD,QAAQ,uBAAR,CAAZ;AACA,IAAIE,YAAYF,QAAQ,oBAAR,CAAhB;AACA,IAAIG,oBAAoBH,QAAQ,8BAAR,CAAxB;AACA,IAAII,gBAAgBJ,QAAQ,kBAAR,CAApB;;AAEAK,OAAOC,OAAP,GAAiBC,wBAAjB;;AAEA,SAASA,wBAAT,GAAqC;;AAEpCR,iBAAeS,IAAf,CAAoB,IAApB;AACA,OAAKC,SAAL,GAAiB,IAAIP,SAAJ,EAAjB;AAEA;;AAEDK,yBAAyBG,SAAzB,GAAqC,sBAAcX,eAAeW,SAA7B,CAArC;AACAH,yBAAyBG,SAAzB,CAAmCC,WAAnC,GAAiDR,iBAAjD;;AAEA;;;;;;AAMAI,yBAAyBG,SAAzB,CAAmCE,8CAAnC,GAAoF,UAAUC,WAAV,EAAuBC,MAAvB,EAA+BC,GAA/B,EAAoC;AACtH,MAAIC,UAAU;AACVF,YAASA,MADC;AAEVG,cAAU,CAAC,qBAAD,EAAwB,QAAxB,CAFA;AAGVC,uBAAiBH,GAAjB,MAHU;AAIVI,YAAQ;AAJE,GAAd;AAMA,SAAOlB,MAAMmB,aAAN,CAAoBJ,OAApB,EAA6BH,WAA7B,CAAP;AACD,CARD;;AAUA;;;AAGAN,yBAAyBG,SAAzB,CAAmCW,UAAnC,GAAgD,UAASC,KAAT,EAAgB;;AAE9D,MAAIC,mBAAmBD,MAAME,OAAN,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,KAAhD;AACA,MAAIC,cAAcvB,cAAcwB,gBAAd,CAA+BL,gBAA/B,CAAlB;;AAEA,MAAK,CAAC,KAAKd,SAAL,CAAeoB,UAAf,CAA0BF,WAA1B,CAAN,EAA+C;;AAE7C,QAAIG,gBAAgB1B,cAAc2B,kBAAd,CAAiCR,gBAAjC,CAApB;;AAEA,QAAIS,UAAU,IAAI7B,iBAAJ,CAAsBwB,WAAtB,EAAmCG,aAAnC,CAAd;AACAE,YAAQC,YAAR,CAAqBX,MAAMY,EAA3B;;AAEA,SAAKzB,SAAL,CAAeY,UAAf,CAA0BM,WAA1B,EAAuCK,OAAvC;AACD,GARD,MASK;AACH,QAAIA,UAAU,KAAKvB,SAAL,CAAe0B,UAAf,CAA0BR,WAA1B,CAAd;AACAK,YAAQC,YAAR,CAAqBX,MAAMY,EAA3B;AACD;AAEF,CAnBD;;AAqBA;;;AAGA3B,yBAAyBG,SAAzB,CAAmC0B,YAAnC,GAAkD,YAAW;AAC5D,SAAO,KAAK3B,SAAL,CAAe4B,eAAf,EAAP;AACA,CAFD","file":"company-new-coupons.service.js","sourcesContent":["/**\n * Created by Carlos on 3/6/2017.\n */\n\nvar CompanyService = require('./company.service');\nvar gmail = require('../gmail/gmail-client');\nvar Companies = require('./companies.module');\nvar CompanyNewCoupons = require('./company-new-coupons.module');\nvar CompanyParser = require('./company-parser');\n\nmodule.exports = CompanyNewCouponsService;\n\nfunction CompanyNewCouponsService () {\n\n CompanyService.call(this);\n this.companies = new Companies();\n\n}\n\nCompanyNewCouponsService.prototype = Object.create(CompanyService.prototype);\nCompanyNewCouponsService.prototype.constructor = CompanyNewCoupons;\n\n/**\n *  @param (String) id\n *  @param {String} day\n *  @param {OAuth2} oauth2Client\n *  @return {Promise} messages[{id:string},]\n */\nCompanyNewCouponsService.prototype.getIdsForAllUnReadPromotionalEmailsBeforeNDays = function (accessToken, userId, day) {\n  var options = {\n      userId : userId,\n      labelIds: ['CATEGORY_PROMOTIONS', 'UNREAD'],\n      q: `newer_than:${day}d`,\n      fields: 'messages(id)'\n    };\n  return gmail.LIST_Messages(options, accessToken);\n};\n\n/**\n * @param email { id, labelIds[], payload.headers[]}\n */\nCompanyNewCouponsService.prototype.addCompany = function(email) {\n\n  var emailOriginValue = email.payload.headers[0].value;\n  var companyName = CompanyParser.parseCompanyName(emailOriginValue);\n\n  if ( !this.companies.hasCompany(companyName) ) {\n\n    var companyDomain = CompanyParser.parseCompanyDomain(emailOriginValue);\n\n    var company = new CompanyNewCoupons(companyName, companyDomain);\n    company.addNewCoupon(email.id);\n\n    this.companies.addCompany(companyName, company);\n  }\n  else {\n    var company = this.companies.getCompany(companyName);\n    company.addNewCoupon(email.id);\n  }\n\n};\n\n/**\n * @return {Companies}\n */\nCompanyNewCouponsService.prototype.getCompanies = function() {\n return this.companies.getAllCompanies();\n};\n\n\n\n"]}