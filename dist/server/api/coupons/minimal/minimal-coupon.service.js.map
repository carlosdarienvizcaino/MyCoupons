{"version":3,"sources":["api/coupons/minimal/minimal-coupon.service.js"],"names":["gmail","require","MinimalCoupon","CompanyParser","module","exports","MinimalCouponService","getMinimalCoupon","accessToke","id","userId","resolve","reject","getEmailMinimalData","then","minimalCoupon","createMinimalCoupon","email","catch","failedMinimalCoupon","createFailedMinimalCoupon","error","message","accessToken","options","format","metadataHeaders","fields","GET_Message","snippet","date","Date","internalDate","toDateString","subject","companyNameAndEmailStr","headers","payload","i","name","value","parseCompanyName","domain","parseCompanyDomain","errorMessage"],"mappings":";;;;;;;;;;;;AAAA;;;;AAIA,IAAIA,QAAQC,QAAQ,0BAAR,CAAZ;AACA,IAAIC,gBAAgBD,QAAQ,yBAAR,CAApB;AACA,IAAIE,gBAAgBF,QAAQ,gCAAR,CAApB;;AAEAG,OAAOC,OAAP,GAAiBC,oBAAjB;;AAEA,SAASA,oBAAT,GAAgC;;AAE9B,SAAO;AACLC,sBAAmBA;AADd,GAAP;AAGD;;AAED;;;;;;;AAOA,SAASA,gBAAT,CAA0BC,UAA1B,EAAsCC,EAAtC,EAA0CC,MAA1C,EAAkD;AAChD,SAAO,sBAAY,UAASC,OAAT,EAAkBC,MAAlB,EAAyB;AAC1CC,wBAAoBL,UAApB,EAAgCC,EAAhC,EAAoCC,MAApC,EACEI,IADF,CACQ,iBAAS;AACd,UAAIC,gBAAgBC,oBAAoBC,KAApB,CAApB;AACAN,cAAQI,aAAR;AACD,KAJF,EAKEG,KALF,CAKQ,iBAAS;AACd,UAAIC,sBAAsBC,0BAA0BC,MAAMC,OAAhC,CAA1B;AACAV,aAAOO,mBAAP;AACD,KARF;AASD,GAVM,CAAP;AAWD;;AAED,SAASN,mBAAT,CAA6BU,WAA7B,EAA0Cd,EAA1C,EAA8CC,MAA9C,EAAsD;AACpD,MAAIc,UAAU;AACVf,QAAIA,EADM;AAEVC,YAAQA,MAFE;AAGVe,YAAS,UAHC;AAIVC,qBAAiB,CAAC,MAAD,EAAS,SAAT,CAJP;AAKVC,YAAQ;AALE,GAAd;AAOA,SAAO3B,MAAM4B,WAAN,CAAkBJ,OAAlB,EAA2BD,WAA3B,CAAP;AACD;;AAED;;;;AAIA,SAASP,mBAAT,CAA6BC,KAA7B,EAAoC;;AAElC,MAAIR,KAAKQ,MAAMR,EAAf;AACA,MAAIoB,UAAUZ,MAAMY,OAApB;AACA,MAAIC,OAAO,IAAIC,IAAJ,CAAS,wBAAgBd,MAAMe,YAAtB,CAAT,EAA8CC,YAA9C,EAAX;AACA,MAAIC,UAAU,EAAd;AACA,MAAIC,yBAAyB,EAA7B;;AAEA,MAAIC,UAAUnB,MAAMoB,OAAN,CAAcD,OAA5B;AACA,OAAK,IAAIE,CAAT,IAAcF,OAAd,EAAuB;;AAErB,QAAIA,QAAQE,CAAR,EAAWC,IAAX,KAAoB,MAAxB,EAAgC;AAC9BJ,+BAAyBC,QAAQE,CAAR,EAAWE,KAApC;AACD,KAFD,MAGK,IAAIJ,QAAQE,CAAR,EAAWC,IAAX,KAAoB,SAAxB,EAAmC;AACtCL,gBAAUE,QAAQE,CAAR,EAAWE,KAArB;AACD;AACF;;AAED,MAAID,OAAOpC,cAAcsC,gBAAd,CAA+BN,sBAA/B,CAAX;AACA,MAAIO,SAASvC,cAAcwC,kBAAd,CAAiCR,sBAAjC,CAAb;;AAEA,SAAO,IAAIjC,aAAJ,CAAkBO,EAAlB,EAAsB8B,IAAtB,EAA4BG,MAA5B,EAAoCR,OAApC,EAA6CL,OAA7C,EAAsDC,IAAtD,CAAP;AACD;;AAED;;;;AAIA,SAASV,yBAAT,CAAmCwB,YAAnC,EAAiD;AAC/C,MAAIzB,sBAAsB,IAAIjB,aAAJ,EAA1B;AACAiB,sBAAoByB,YAApB,GAAmCA,YAAnC;AACA,SAAOzB,mBAAP;AACD","file":"minimal-coupon.service.js","sourcesContent":["/**\n * Created by Carlos on 3/6/2017.\n */\n\nvar gmail = require('../../gmail/gmail-client');\nvar MinimalCoupon = require('./minimal-coupon.module');\nvar CompanyParser = require('../../companies/company-parser');\n\nmodule.exports = MinimalCouponService;\n\nfunction MinimalCouponService() {\n\n  return {\n    getMinimalCoupon : getMinimalCoupon,\n  };\n}\n\n/**\n *\n * @param accessToke\n * @param id\n * @param userId\n * @return {Promise}\n */\nfunction getMinimalCoupon(accessToke, id, userId) {\n  return new Promise(function(resolve, reject){\n    getEmailMinimalData(accessToke, id, userId)\n     .then( email => {\n       var minimalCoupon = createMinimalCoupon(email);\n       resolve(minimalCoupon);\n     })\n     .catch(error => {\n       var failedMinimalCoupon = createFailedMinimalCoupon(error.message);\n       reject(failedMinimalCoupon);\n     });\n  });\n}\n\nfunction getEmailMinimalData(accessToken, id, userId) {\n  var options = {\n      id: id,\n      userId: userId,\n      format : 'metadata',\n      metadataHeaders: ['From', 'Subject'],\n      fields: 'id, snippet, internalDate, payload(headers)'\n  };\n  return gmail.GET_Message(options, accessToken);\n}\n\n/**\n * @param {id, snippet, internalDate, payload.headers[]} email\n * @return {MinimalCoupon}\n */\nfunction createMinimalCoupon(email) {\n\n  var id = email.id;\n  var snippet = email.snippet;\n  var date = new Date(Number.parseInt(email.internalDate)).toDateString();\n  var subject = '';\n  var companyNameAndEmailStr = '';\n\n  var headers = email.payload.headers;\n  for( var i in headers) {\n\n    if (headers[i].name === 'From') {\n      companyNameAndEmailStr = headers[i].value;\n    }\n    else if (headers[i].name === 'Subject') {\n      subject = headers[i].value;\n    }\n  }\n\n  var name = CompanyParser.parseCompanyName(companyNameAndEmailStr);\n  var domain = CompanyParser.parseCompanyDomain(companyNameAndEmailStr);\n\n  return new MinimalCoupon(id, name, domain, subject, snippet, date);\n}\n\n/**\n * @param {String} email\n * @return {MinimalCoupon}\n */\nfunction createFailedMinimalCoupon(errorMessage) {\n  var failedMinimalCoupon = new MinimalCoupon();\n  failedMinimalCoupon.errorMessage = errorMessage;\n  return failedMinimalCoupon;\n}\n\n\n"]}