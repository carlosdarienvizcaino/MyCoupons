{"version":3,"sources":["api/coupons/coupons-modify.controller.js"],"names":["google","require","gmail","OAuth2","auth","credentials","MYCOUPONS_READ","oauth2Client","client_id","client_secret","redirect_uri","module","exports","req","res","accessToken","headers","access_token","userId","params","body","setCredentials","status","modifyEmailsLabelsIds","options","resolve","reject","users","messages","batchModify","err","email"],"mappings":";;;;;;;;AAEA,IAAIA,SAASC,QAAQ,YAAR,CAAb;AACA,IAAIC,QAAQF,OAAOE,KAAP,CAAa,IAAb,CAAZ;AACA,IAAIC,SAASH,OAAOI,IAAP,CAAYD,MAAzB;AACA,IAAME,cAAcJ,QAAQ,uCAAR,CAApB;AACA,IAAMK,iBAAiB,gBAAvB;;AAEA,IAAIC,eAAe,IAAIJ,MAAJ,CACjBE,YAAYG,SADK,EAEjBH,YAAYI,aAFK,EAGjBJ,YAAYK,YAAZ,CAAyB,CAAzB,CAHiB,CAAnB;;AAMAC,OAAOC,OAAP,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAkB;;AAEjC,MAAIC,cAAcF,IAAIG,OAAJ,CAAYC,YAA9B;AACA,MAAIC,SAASL,IAAIM,MAAJ,CAAWD,MAAxB;AACA,MAAIE,OAAOP,IAAIO,IAAf;;AAEAb,eAAac,cAAb,CAA4B;AAC1BJ,kBAAcF;AADY,GAA5B;;AAIAD,MAAIQ,MAAJ,CAAW,GAAX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAlBD;;AAoBA,SAASC,qBAAT,CAA+BL,MAA/B,EAAuCE,IAAvC,EAA6Cb,YAA7C,EAA2D;AACzD,MAAIiB,UAAU;AACVN,YAAQA,MADE;AAEVE,UAAMA,IAFI;AAGVhB,UAAMG;AAHI,GAAd;AAKA,SAAO,sBAAY,UAAUkB,OAAV,EAAmBC,MAAnB,EAA0B;AAC3CxB,UAAMyB,KAAN,CAAYC,QAAZ,CAAqBC,WAArB,CAAiCL,OAAjC,EAA0C,UAASM,GAAT,EAAcC,KAAd,EAAoB;AAC5D,UAAID,GAAJ,EACEJ,OAAOI,GAAP,EADF,KAGEL,QAAQM,KAAR;AACH,KALD;AAMD,GAPM,CAAP;AAQD","file":"coupons-modify.controller.js","sourcesContent":["\n\nvar google = require('googleapis');\nvar gmail = google.gmail('v1');\nvar OAuth2 = google.auth.OAuth2;\nconst credentials = require('../../.credentials/google_credentials');\nconst MYCOUPONS_READ = 'MYCOUPONS_READ';\n\nvar oauth2Client = new OAuth2(\n  credentials.client_id,\n  credentials.client_secret,\n  credentials.redirect_uri[1]\n);\n\nmodule.exports = function(req, res){\n\n  var accessToken = req.headers.access_token;\n  var userId = req.params.userId;\n  var body = req.body;\n\n  oauth2Client.setCredentials({\n    access_token: accessToken\n  });\n\n  res.status(204);\n  // modifyEmailsLabelsIds(body, userId, oauth2Client)\n  //   .then( email => {\n  //     res.status(200).send(\"OK\");\n  //   })\n  //   .catch(error => {\n  //     res.status(400).send({errorMessage : error.message});\n  //   });\n};\n\nfunction modifyEmailsLabelsIds(userId, body, oauth2Client) {\n  var options = {\n      userId: userId,\n      body: body,\n      auth: oauth2Client\n  };\n  return new Promise(function (resolve, reject){\n    gmail.users.messages.batchModify(options, function(err, email){\n      if (err)\n        reject(err);\n      else\n        resolve(email);\n    });\n  });\n}\n\n\n\n"]}