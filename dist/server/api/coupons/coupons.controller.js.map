{"version":3,"sources":["api/coupons/coupons.controller.js"],"names":["google","require","gmail","OAuth2","auth","credentials","oauth2Client","client_id","client_secret","redirect_uri","module","exports","req","res","accessToken","headers","access_token","userId","params","id","setCredentials","users","messages","get","err","email","responseBody","createResponseBodyForFailedRequest","status","code","send","payload","isMimeTypeHtml","mimeType","createResponseBodyFromSinglePartEmail","isMimeTypeMultipart","createResponseBodyFromMultiPartEmail","createResponseBodyForUnknownMimeTypeEmail","ResponseBody","data","errorMessage","body","payloadParts","parts","forEach","part","push","undefined","error","errors","message"],"mappings":"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","file":"coupons.controller.js","sourcesContent":["/**\n * Created by Carlos on 1/20/2017.\n */\nvar google = require('googleapis');\nvar gmail = google.gmail('v1');\nvar OAuth2 = google.auth.OAuth2;\nconst credentials = require('../../.credentials/google_credentials');\n\nvar oauth2Client = new OAuth2(\n  credentials.client_id,\n  credentials.client_secret,\n  credentials.redirect_uri[1]\n);\n\nmodule.exports = function(req, res){\n\n    var accessToken = req.headers.access_token;\n    var userId = req.params.userId;\n    var id = req.params.id;\n\n    oauth2Client.setCredentials({\n      access_token: accessToken\n    });\n\n    gmail.users.messages.get({\n      userId: userId,\n      id : id,\n      auth: oauth2Client,\n    }, function (err, email) {\n\n      if (err){\n\n       var responseBody  = createResponseBodyForFailedRequest(id, err);\n       res.status(err.code).send(responseBody);\n\n      }\n      else {\n\n        var payload = email.payload;\n        if ( isMimeTypeHtml(payload.mimeType) ) {\n\n          var responseBody  = createResponseBodyFromSinglePartEmail(email);\n          res.status(200).send(responseBody);\n\n        }\n        else if ( isMimeTypeMultipart(payload.mimeType) ) {\n\n          var responseBody = createResponseBodyFromMultiPartEmail(email);\n          res.status(200).send(responseBody);\n\n        }\n        else {\n\n          var responseBody = createResponseBodyForUnknownMimeTypeEmail(email);\n          res.status(400).send(responseBody);\n        }\n\n      }\n    });\n};\n\nfunction ResponseBody(id, data, errorMessage) {\n  this.id = id || 'UNKNOWN';\n  this.data = data || [];\n  this.errorMessage = errorMessage || 'UNKNOWN';\n}\n\nfunction createResponseBodyFromSinglePartEmail(email) {\n  var id = email.id;\n  var data = [ email.payload.body.data ];\n  return new ResponseBody(id,data);\n}\n\nfunction createResponseBodyFromMultiPartEmail(email) {\n\n  var id = email.id;\n  var payloadParts = email.payload.parts;\n  var data = [];\n\n  payloadParts.forEach( part =>{\n    if ( isMimeTypeHtml(part.mimeType) ){\n      data.push(part.body.data);\n    }\n  });\n  return new ResponseBody(id,data);\n}\n\nfunction createResponseBodyForUnknownMimeTypeEmail(email) {\n  var id = email.id;\n  var data = undefined;\n  var errorMessage = `Gmail Coupon with id: ${email.id} MimeType: ${email.payload.mimeType} is invalid`;\n  return new ResponseBody(id, data, errorMessage);\n}\n\nfunction createResponseBodyForFailedRequest(id, error) {\n  var errorMessage = error.errors[0].message;\n  return new ResponseBody(id, undefined, errorMessage);\n}\n\nfunction isMimeTypeHtml(mimeType) {\n  return mimeType === 'text/html';\n}\n\nfunction isMimeTypeMultipart(mimeType) {\n return mimeType === 'multipart/alternative';\n}\n"]}